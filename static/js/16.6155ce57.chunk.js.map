{"version":3,"sources":["RoW/RoW.js"],"names":["globallist","Option","RoW","state","area_message","cum_or_inc","data_loading","areas","width","height","arealist","case_data","death_data","death_list","case_preds","case_pred_list","death_preds","death_pred_list","CoD","case_data_plot","death_data_plot","case_preds_plot","death_preds_plot","data_date","pred_date","to_plot","updateWindowDimensions","bind","plotData","onValuesChange","doneLoading","this","window","addEventListener","setState","Papa","parse","download","worker","complete","results","i","data","length","slice","thislist","removeEventListener","innerWidth","innerHeight","thisdata","preds","dd","push","x","y","dd_p","base_dat","diff_dat","full_dd","id","changedValues","allValues","idx","indexOf","case_d","death_d","optionlist","map","s","key","value","num_ticks","style","color","className","href","ref","formRef","initialValues","content","placement","Item","marginBottom","label","name","rules","required","message","showSearch","loading","placeholder","Group","initialValue","buttonStyle","Button","margin","top","right","bottom","left","xScale","type","format","xFormat","yScale","min","max","stacked","reverse","axisTop","axisRight","axisLeft","numeral","orient","tickSize","tickPadding","tickRotation","legend","concat","legendOffset","legendPosition","axisBottom","tickValues","colors","scheme","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","from","pointLabel","pointLabelYOffset","useMesh","legends","text","fontSize","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","itemBackground","axis","ticks","background","target","Component"],"mappings":"kVA8BIA,EAAa,GAETC,E,IAAAA,OAEFC,E,kDAEL,aAAe,IAAD,8BACb,gBACKC,MAAQ,CACTC,aAAc,+BACdC,WAAY,aACZC,cAAc,EACdC,MAAO,GACPC,MAAO,EACPC,OAAQ,EACRC,SAAU,GACVC,UAAW,GACXC,WAAY,GACZC,WAAW,GACXC,WAAY,GACZC,eAAgB,GAChBC,YAAa,GACbC,gBAAiB,GACjBC,IAAK,OACLC,eAAgB,GAChBC,gBAAiB,GACjBC,gBAAiB,GACjBC,iBAAkB,GAClBC,UAAU,GACVC,UAAW,GACXC,QAAS,IAIX,EAAKC,uBAAyB,EAAKA,uBAAuBC,KAA5B,gBAC9B,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKG,YAAc,EAAKA,YAAYH,KAAjB,gBA/BR,E,gEAqCXI,KAAKL,yBACLM,OAAOC,iBAAiB,SAAUF,KAAKL,wBAEvCK,KAAKG,SAAS,CAACxB,SAAUV,M,2CAKzBmC,IAAKC,MAvDK,sGAuDU,CAClBC,UAAU,EAAMC,QAAQ,EACxBC,SAAU,SAASC,GACjB,IAAIC,EAEF,IAAIA,EAAE,EAAGA,EAAED,EAAQE,KAAKC,OAAQF,IAE3BD,EAAQE,KAAKD,GAAGE,OAAS,IAC1B3C,EAAWyC,EAAE,GAAKD,EAAQE,KAAKD,GAAG,IAGtCV,KAAKG,SAAS,CAACX,UAAWiB,EAAQE,KAAK,GAAGE,MAAM,KAChDb,KAAKG,SAAS,CAACxB,SAAUV,IACzB+B,KAAKG,SAAS,CAACvB,UAAW6B,EAAQE,QAElCf,KAAKI,QAGXI,IAAKC,MAxEM,wGAwEU,CACnBC,UAAU,EAAMC,QAAQ,EACxBC,SAAU,SAASC,GACjB,IAAIC,EACAI,EAAW,GACf,IAAIJ,EAAE,EAAGA,EAAED,EAAQE,KAAKC,OAAQF,IAE3BD,EAAQE,KAAKD,GAAGE,OAAS,IAC1BE,EAASJ,EAAE,GAAKD,EAAQE,KAAKD,GAAG,IAGpCV,KAAKG,SAAS,CAACrB,WAAYgC,IAC3Bd,KAAKG,SAAS,CAACtB,WAAY4B,EAAQE,QACnCf,KAAKI,QAGTI,IAAKC,MAvFU,qHAuFU,CACvBC,UAAU,EAAMC,QAAQ,EACxBC,SAAU,SAASC,GACjB,IAAIC,EACAI,EAAW,GACf,IAAIJ,EAAE,EAAGA,EAAED,EAAQE,KAAKC,OAAQF,IAE3BD,EAAQE,KAAKD,GAAGE,OAAS,IAC1BE,EAASJ,EAAE,GAAKD,EAAQE,KAAKD,GAAG,IAGpCV,KAAKG,SAAS,CAACV,UAAWgB,EAAQE,KAAK,GAAGE,MAAM,KAChDb,KAAKG,SAAS,CAACnB,eAAgB8B,IAC/Bd,KAAKG,SAAS,CAACpB,WAAY0B,EAAQE,QAEnCf,KAAKI,QAGTI,IAAKC,MAxGW,kHAwGU,CACxBC,UAAU,EAAMC,QAAQ,EACxBC,SAAU,SAASC,GACjB,IAAIC,EACAI,EAAW,GACf,IAAIJ,EAAE,EAAGA,EAAED,EAAQE,KAAKC,OAAQF,IAE3BD,EAAQE,KAAKD,GAAGE,OAAS,IAC1BE,EAASJ,EAAE,GAAKD,EAAQE,KAAKD,GAAG,IAGpCV,KAAKG,SAAS,CAACjB,gBAAiB4B,IAChCd,KAAKG,SAAS,CAAClB,YAAawB,EAAQE,QAEpCf,KAAKI,U,6CAKTC,OAAOc,oBAAoB,SAAUf,KAAKL,0B,+CAI1CK,KAAKG,SAAS,CAAE1B,MAAOwB,OAAOe,WAAYtC,OAAQuB,OAAOgB,gB,iCAKzD,IACIC,EAAUC,EACVT,EAFAU,EAAG,GAeP,GAXsB,SAAnBpB,KAAK5B,MAAMe,KAEZ+B,EAAWlB,KAAK5B,MAAMgB,eACtB+B,EAAQnB,KAAK5B,MAAMkB,kBAInB4B,EAAWlB,KAAK5B,MAAMiB,gBACtB8B,EAAQnB,KAAK5B,MAAMmB,kBAGQ,eAA1BS,KAAK5B,MAAME,WACd,CACE,IAAIoC,EAAE,EAAGA,EAAEQ,EAASN,OAAQF,IAEvBQ,EAASR,GAAK,GACfU,EAAGC,KAAK,CACNC,EAAGtB,KAAK5B,MAAMoB,UAAUkB,GACxBa,EAAGL,EAASR,KAIlB,IAAIc,EAAO,GACX,IAAId,EAAE,EAAGA,EAAES,EAAMP,OAAQF,IAEvBc,EAAKH,KAAK,CACRC,EAAGtB,KAAK5B,MAAMqB,UAAUiB,GACxBa,EAAGJ,EAAMT,SAKf,CACE,IAAIe,EAAWP,EAAS,GACpBQ,EAAW,EACf,IAAIhB,EAAE,EAAGA,EAAEQ,EAASN,OAAQF,KAE1BgB,EAAWR,EAASR,GAAIe,IACT,GAAKA,EAAU,GAE5BL,EAAGC,KAAK,CACNC,EAAGtB,KAAK5B,MAAMoB,UAAUkB,GACxBa,EAAGG,IAGPD,EAAWP,EAASR,GAElBc,EAAO,GAGX,IAFAC,EAAWP,EAASA,EAASN,OAAO,GAEhCF,EAAE,EAAGA,EAAES,EAAMP,OAAQF,KAEvBgB,EAAWP,EAAMT,GAAIe,IACN,GAAKA,EAAU,GAE5BD,EAAKH,KAAK,CACRC,EAAGtB,KAAK5B,MAAMqB,UAAUiB,GACxBa,EAAGG,IAGPD,EAAWN,EAAMT,GAGrB,IAAIiB,EAAU,CAAC,CAACC,GAAI,OAAQjB,KAAKS,GAAK,CAACQ,GAAI,YAAajB,KAAKa,IAC7DxB,KAAKG,SAAS,CAACT,QAASiC,M,qCAIXE,EAAeC,GAAW,IAAD,OAEtC,GAAI,UAAWD,EACf,CACE,IAAIE,EAAM/B,KAAK5B,MAAMO,SAASqD,QAAQF,EAAUtD,OAC5CyD,EAAS,GAETF,GAAK,IACPE,EAASjC,KAAK5B,MAAMQ,UAAUmD,EAAI,GAAGlB,MAAM,IAE7Cb,KAAKG,SAAS,CAACf,eAAiB6C,IAEhCA,EAAS,IACTF,EAAM/B,KAAK5B,MAAMY,eAAegD,QAAQF,EAAUtD,SACzC,IACPyD,EAASjC,KAAK5B,MAAMW,WAAWgD,EAAI,GAAGlB,MAAM,IAE9Cb,KAAKG,SAAS,CAACb,gBAAkB2C,IAEjC,IAAIC,EAAU,IACdH,EAAM/B,KAAK5B,MAAMU,WAAWkD,QAAQF,EAAUtD,SACrC,IACP0D,EAAUlC,KAAK5B,MAAMS,WAAWkD,EAAI,GAAGlB,MAAM,IAE/Cb,KAAKG,SAAS,CAACd,gBAAkB6C,IAEjCA,EAAS,IACTH,EAAM/B,KAAK5B,MAAMc,gBAAgB8C,QAAQF,EAAUtD,SAC1C,IACP0D,EAAUlC,KAAK5B,MAAMa,YAAY8C,EAAI,GAAGlB,MAAM,IAEhDb,KAAKG,SAAS,CAACZ,iBAAkB2C,IAEhC,eAAgBL,GAEjB7B,KAAKG,SAAS,CAAC7B,WAAYwD,EAAUxD,aAAa,kBAAI,EAAKuB,cAE7DG,KAAKG,SAAS,CAAChB,IAAK2C,EAAU3C,MAAM,kBAAI,EAAKU,gB,oCAK7CG,KAAKG,SAAS,CAAC5B,cAAc,IAC7ByB,KAAKG,SAAS,CAAC9B,aAAc,iE,+BAIrB,IAAD,EACuE2B,KAAK5B,MAA5EI,EADA,EACAA,MAAMG,EADN,EACMA,SAASQ,EADf,EACeA,IAAKO,EADpB,EACoBA,QAAuBpB,GAD3C,EAC6BC,aAD7B,EAC2CD,YAAYD,EADvD,EACuDA,aAqB1D8D,EAAaxD,EAASiC,OAAS,GAChCjC,EAASyD,KAAK,SAACC,GAChB,OACE,kBAACnE,EAAD,CAAQoE,IAAKD,EAAGE,MAAOF,GAAIA,KAE1BrC,MACGwC,EAAY,EAAIxC,KAAK5B,MAAMK,MAAM,IAQvC,OALGuB,KAAK5B,MAAMG,aAAeyB,KAAK5B,MAAMW,WAAW6B,OAAO,GAAKZ,KAAK5B,MAAMa,YAAY2B,OAAO,GAAKZ,KAAK5B,MAAMS,WAAW+B,OAAS,GAAKZ,KAAK5B,MAAMQ,UAAUgC,OAAS,GAElKZ,KAAKD,cAIN,yBAAK0C,MAAO,CAACC,MAAO,YACpB,yBAAKC,UAAU,QACb,yBAAKA,UAAY,gBACjB,2BACA,kEAGA,2BACA,kFACoD,uBAAGC,KAAK,MAAR,cADpD,8FAEA,uBAAGA,KAAK,6DAAR,WAFA,OAQA,2BACA,yBAAKD,UAAU,mBAEf,uBACAE,IAAK7C,KAAK8C,QACVhD,eAAgBE,KAAKF,eACrBiD,cAAe,CACdvE,MAAOA,EACPW,IAAKA,EACLb,WAAYA,IAId,uBACA0E,QAAS3E,EACT4E,UAAU,OAEV,sBAAMC,KAAN,CACAT,MAAO,CAAEU,aAAc,OACvBC,MAAM,WACNC,KAAK,QACLC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,0BAG3B,uBACAC,YAAU,EACVC,QAAW1D,KAAK5B,MAAMG,aACtBkE,MAAO,CAAEhE,MAAO,QAChBkF,YAAY,gBAEXxB,KAMC,2BAEA,2BACA,uBACAa,QAAS,kDACTC,UAAU,cAEV,sBAAMC,KAAN,CAAWE,MAAM,YAAYX,MAAO,CAACU,aAAc,OAAQE,KAAK,aAAad,MAAOjE,GACpF,sBAAOsF,MAAP,CACAC,aAAe,aACfC,YAAY,SAEZ,sBAAOC,OAAP,CAAcxB,MAAM,cAApB,cACA,sBAAOwB,OAAP,CAAcxB,MAAM,OAApB,kBAMA,2BACA,uBACAS,QAAS,iCACTC,UAAU,cAEV,sBAAMC,KAAN,CAAWE,MAAM,GAAGX,MAAO,CAACU,aAAc,OAAQE,KAAK,MAAMd,MAAOpD,GACpE,sBAAOyE,MAAP,CACAC,aAAe,OACfC,YAAY,SAEZ,sBAAOC,OAAP,CAAcxB,MAAM,QAApB,SACA,sBAAOwB,OAAP,CAAcxB,MAAM,SAApB,kBAUF,2BACA,yBAAKI,UAAU,aACb,kBAAC,IAAD,CACAhC,KAAQjB,EACRsE,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,IAAKC,KAAM,IACjDC,OAAQ,CACNC,KAAM,OACNC,OAAQ,YAEVC,QAAQ,gBACRC,OAAQ,CACNH,KAAM,SACNI,IAAK,OACLC,IAAK,OACLC,SAAS,EACTC,SAAS,GAEXC,QAAS,KACTC,UAAW,KACXC,SAAU,CACRT,OAAQ,SAAAhD,GAAC,OAAI0D,IAAQ1D,GAAGgD,OAAO,WAC/BW,OAAQ,OACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQhH,EAAWiH,OAAO,IAAIA,OAAOpG,EAAIoG,OAAO,OAChDC,cAAe,GACfC,eAAgB,UAElBC,WAAY,CACVnB,OAAQ,QACRoB,WAAYnD,EACZ8C,OAAQ,OACRE,aAAc,GACdC,eAAgB,UAElBG,OAAQ,CAAEC,OAAQ,QAClBC,UAAW,GACXC,WAAY,CAAEC,MAAO,cACrBC,iBAAkB,EAClBC,iBAAkB,CAAEC,KAAM,cAC1BC,WAAW,IACXC,mBAAoB,GACpBC,SAAS,EACTC,QAAS,CACP,CACEC,KAAM,CAACC,SAAU,IACjBC,OAAQ,WACRC,UAAW,SACXC,SAAS,EACTC,WAAY,GACZC,WAAY,EACZC,aAAc,EACdC,cAAe,gBACfC,UAAW,GACXC,WAAY,GACZC,YAAa,IACbC,WAAY,GACZC,YAAa,SACbC,kBAAmB,oBACnBC,QAAS,CACT,CACEC,GAAI,QACJ/E,MAAO,CACLgF,eAAgB,qBAChBN,YAAa,OAMnBnB,MAtMI,CACZ0B,KAAM,CACJC,MAAO,CACLnB,KAAM,CACJC,SAAU,KAGdnB,OAAQ,CACNkB,KAAM,CACJC,SAAU,MAIhBF,QAAS,CACPC,KAAM,CACJC,SAAU,UA2LV,yBAAK9D,UAAY,gBACf,2BACA,yBAAKF,MAAQ,CAACmF,WAAY,YAC1B,+BACC,mCADD,2iBASA,2BACA,2HAEA,4BACA,4BAAI,uBAAGhF,KAAQ,sGAAsGtC,UAAQ,EAACuH,OAAO,UAAjI,yCAEJ,4BAAI,uBAAGjF,KAAQ,wGAAwGtC,UAAQ,EAACuH,OAAO,UAAnI,yCAAJ,KAEA,4BAAI,uBAAGjF,KAAQ,qHAAqHtC,UAAQ,EAACuH,OAAO,UAAhJ,kCAAJ,KAEA,4BAAI,uBAAGjF,KAAQ,kHAAkHtC,UAAQ,EAACuH,OAAO,UAA7I,mCAAJ,OAMA,2BACA,kEACA,kKACI,uBAAGjF,KAAO,6EAAV,eAGJ,4BACA,4BAAI,uBAAGA,KAAQ,kGAAkGtC,UAAQ,EAACuH,OAAO,UAA7H,2CAEJ,4BAAI,uBAAGjF,KAAQ,oGAAoGtC,UAAQ,EAACuH,OAAO,UAA/H,4CAEJ,4BAAI,uBAAGjF,KAAQ,qHAAqHtC,UAAQ,EAACuH,OAAO,UAAhJ,sCAEJ,4BAAI,uBAAGjF,KAAQ,kHAAkHtC,UAAQ,EAACuH,OAAO,UAA7I,yCAKJ,2BACA,2CAAgB,uBAAGjF,KAAO,wFAAV,UAAhB,gHAEA,uBAAGA,KAAO,4EAA4EiF,OAAO,UAA7F,sCAIA,0C,GAxfMC,aAmgBG3J,a","file":"static/js/16.6155ce57.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport 'antd/dist/antd.css';\r\nimport \"./RoW.css\";\r\nimport { ResponsiveLine } from \"@nivo/line\";\r\n//import moment from \"moment\";\r\nimport numeral from \"numeral\";\r\n\r\nimport {\r\n  List,\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Button,\r\n  Radio,\r\n  Checkbox,\r\n  Slider,\r\n  Tooltip,\r\n  Switch,\r\n  Popover,\r\n  Alert,\r\n  Row,\r\n  Col,\r\n  Input\r\n} from \"antd\";\r\n\r\nvar g_cases = \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/google_data.csv\";\r\nvar g_deaths = \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/google_deaths.csv\";\r\nvar g_case_preds = \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/google_forecasts_current_0.csv\";\r\nvar g_death_preds = \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/google_deaths_current_0.csv\";\r\nvar globallist = [];\r\n\r\nconst { Option } = Select;\r\n\r\nclass RoW extends Component {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n      area_message: \"Please wait for data to load\",\r\n      cum_or_inc: \"Cumulative\",\r\n      data_loading: true,\r\n      areas: [],\r\n      width: 0, \r\n      height: 0,\r\n      arealist: [],\r\n      case_data: [],\r\n      death_data: [],\r\n      death_list:[],\r\n      case_preds: [],\r\n      case_pred_list: [],\r\n      death_preds: [],\r\n      death_pred_list: [],\r\n      CoD: \"case\",\r\n      case_data_plot: [],\r\n      death_data_plot: [],\r\n      case_preds_plot: [],\r\n      death_preds_plot: [],\r\n      data_date:[],\r\n      pred_date: [],\r\n      to_plot: []\r\n    };\r\n\r\n\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    this.plotData = this.plotData.bind(this);\r\n    this.onValuesChange = this.onValuesChange.bind(this);\r\n    this.doneLoading = this.doneLoading.bind(this);\r\n    \r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n\r\n    this.setState({arealist: globallist});\r\n  }\r\n\r\n  componentWillMount() {\r\n\r\n    Papa.parse(g_cases, {\r\n      download: true, worker: true,\r\n      complete: function(results) {\r\n        var i;\r\n          //var globallist = [];\r\n          for(i=1; i<results.data.length; i++)\r\n          {\r\n            if(results.data[i].length > 2){\r\n              globallist[i-1] = results.data[i][1];\r\n            }\r\n          }\r\n          this.setState({data_date: results.data[0].slice(2)});\r\n          this.setState({arealist: globallist});\r\n          this.setState({case_data: results.data});\r\n          //console.log(this.state.data_date);\r\n        }.bind(this)\r\n      });\r\n\r\n    Papa.parse(g_deaths, {\r\n      download: true, worker: true,\r\n      complete: function(results) {\r\n        var i;\r\n        var thislist = [];\r\n        for(i=1; i<results.data.length; i++)\r\n        {\r\n          if(results.data[i].length > 2){\r\n            thislist[i-1] = results.data[i][1];\r\n          }\r\n        }\r\n        this.setState({death_list: thislist});\r\n        this.setState({death_data: results.data});\r\n      }.bind(this)\r\n    });\r\n\r\n    Papa.parse(g_case_preds, {\r\n      download: true, worker: true,\r\n      complete: function(results) {\r\n        var i;\r\n        var thislist = [];\r\n        for(i=1; i<results.data.length; i++)\r\n        {\r\n          if(results.data[i].length > 2){\r\n            thislist[i-1] = results.data[i][1];\r\n          }\r\n        }\r\n        this.setState({pred_date: results.data[0].slice(2)});\r\n        this.setState({case_pred_list: thislist});\r\n        this.setState({case_preds: results.data});\r\n        //console.log(this.state.pred_date);\r\n      }.bind(this)\r\n    });\r\n\r\n    Papa.parse(g_death_preds, {\r\n      download: true, worker: true,\r\n      complete: function(results) {\r\n        var i;\r\n        var thislist = [];\r\n        for(i=1; i<results.data.length; i++)\r\n        {\r\n          if(results.data[i].length > 2){\r\n            thislist[i-1] = results.data[i][1];\r\n          }\r\n        }\r\n        this.setState({death_pred_list: thislist});\r\n        this.setState({death_preds: results.data});\r\n        //console.log(this.state.death_preds.length);\r\n      }.bind(this)\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n\r\n  plotData()\r\n  {\r\n    var dd=[];\r\n    var thisdata, preds;\r\n    var i;\r\n\r\n    if(this.state.CoD === \"case\")\r\n    {\r\n      thisdata = this.state.case_data_plot;\r\n      preds = this.state.case_preds_plot;\r\n    }\r\n    else\r\n    {\r\n      thisdata = this.state.death_data_plot;\r\n      preds = this.state.death_preds_plot; \r\n    }\r\n\r\n    if(this.state.cum_or_inc === \"Cumulative\")\r\n    {  \r\n      for(i=0; i<thisdata.length; i++)\r\n      {\r\n        if(thisdata[i] > 0){\r\n          dd.push({\r\n            x: this.state.data_date[i],\r\n            y: thisdata[i]\r\n          });\r\n        }\r\n      }\r\n      var dd_p = [];\r\n      for(i=0; i<preds.length; i++)\r\n      {\r\n        dd_p.push({\r\n          x: this.state.pred_date[i],\r\n          y: preds[i]\r\n        });\r\n      }\r\n    }\r\n    else\r\n    {\r\n      var base_dat = thisdata[0];\r\n      var diff_dat = 0;\r\n      for(i=1; i<thisdata.length; i++)\r\n      {\r\n        diff_dat = thisdata[i] -base_dat;\r\n        if(diff_dat >= 0 && base_dat> 0)\r\n        {\r\n          dd.push({\r\n            x: this.state.data_date[i],\r\n            y: diff_dat\r\n          });\r\n        }\r\n        base_dat = thisdata[i];\r\n      }\r\n      var dd_p = [];\r\n      base_dat = thisdata[thisdata.length-1];\r\n      //base_dat = base_dat>0?base_dat:-1;\r\n      for(i=0; i<preds.length; i++)\r\n      {\r\n        diff_dat = preds[i] -base_dat;\r\n        if(diff_dat >= 0 && base_dat> 0)\r\n        {\r\n          dd_p.push({\r\n            x: this.state.pred_date[i],\r\n            y: diff_dat\r\n          });\r\n        }\r\n        base_dat = preds[i];\r\n      }\r\n    }\r\n    var full_dd = [{id: \"Data\", data:dd}, {id: \"Forecasts\", data:dd_p},];\r\n    this.setState({to_plot: full_dd});\r\n    //console.log(full_dd);\r\n  }\r\n\r\n  onValuesChange(changedValues, allValues){\r\n\r\n    if (\"areas\" in changedValues)\r\n    {\r\n      var idx = this.state.arealist.indexOf(allValues.areas);\r\n      var case_d = [];\r\n      //console.log(idx);\r\n      if (idx>-1){\r\n        case_d = this.state.case_data[idx+1].slice(2);\r\n      }\r\n      this.setState({case_data_plot : case_d});\r\n\r\n      case_d = [];\r\n      idx = this.state.case_pred_list.indexOf(allValues.areas);\r\n      if (idx>-1){\r\n        case_d = this.state.case_preds[idx+1].slice(2);\r\n      }\r\n      this.setState({case_preds_plot : case_d});\r\n      \r\n      var death_d = [];\r\n      idx = this.state.death_list.indexOf(allValues.areas);\r\n      if (idx>-1){\r\n        death_d = this.state.death_data[idx+1].slice(2);\r\n      }\r\n      this.setState({death_data_plot : death_d});\r\n      \r\n      death_d =[];\r\n      idx = this.state.death_pred_list.indexOf(allValues.areas);\r\n      if (idx>-1){\r\n        death_d = this.state.death_preds[idx+1].slice(2);\r\n      }\r\n      this.setState({death_preds_plot: death_d});\r\n    }\r\n    if(\"cum_or_inc\" in changedValues)\r\n    {\r\n      this.setState({cum_or_inc: allValues.cum_or_inc}, ()=>this.plotData());  \r\n    }\r\n    this.setState({CoD: allValues.CoD}, ()=>this.plotData());\r\n  }\r\n\r\n  doneLoading()\r\n  {\r\n    this.setState({data_loading: false});\r\n    this.setState({area_message: \"Start typing a location name to see its data and forecasts\"})\r\n\r\n  }\r\n\r\n  render() {\r\n    const {areas,arealist,CoD, to_plot, data_loading, cum_or_inc, area_message} = this.state;\r\n    //console.log(to_plot);\r\n    const theme = {\r\n      axis: {\r\n        ticks: {\r\n          text: {\r\n            fontSize: 16\r\n          }\r\n        },\r\n        legend: {\r\n          text: {\r\n            fontSize: 16\r\n          }\r\n        }\r\n      },\r\n      legends: {\r\n        text: {\r\n          fontSize: 16\r\n        }\r\n      }\r\n    };\r\n    let optionlist = arealist.length > 0\r\n    && arealist.map ((s) => {\r\n      return (\r\n        <Option key={s} value={s}>{s}</Option>\r\n        )\r\n      }, this);\r\n      const num_ticks = 1 + this.state.width/280;\r\n\r\n      \r\n      if(this.state.data_loading & this.state.case_preds.length>0 && this.state.death_preds.length>0 && this.state.death_data.length > 0 && this.state.case_data.length > 0)\r\n      {\r\n        this.doneLoading();\r\n      }\r\n      \r\n      return (\r\n       <div style={{color: \"#1f1c1c\"}}>\r\n       <div className=\"grid\">\r\n         <div className = \"introduction\">\r\n         <Row>\r\n         <h1>Forecasts for \"Almost\" Everywhere</h1>\r\n         </Row>\r\n\r\n         <Row>\r\n         <p>\r\n         Use this page to see forecasts not addressed on the <a href=\"#/\"> main page</a>. Forecasts are available for all locations (around 20,000) for which Google makes its data \r\n         <a href=\"https://github.com/GoogleCloudPlatform/covid-19-open-data\"> public</a>. \r\n         </p>\r\n         \r\n         </Row> \r\n         </div>\r\n\r\n         <Row>\r\n         <div className=\"form-column-row\">\r\n         \r\n         <Form \r\n         ref={this.formRef}\r\n         onValuesChange={this.onValuesChange}\r\n         initialValues={{\r\n          areas: areas,\r\n          CoD: CoD,\r\n          cum_or_inc: cum_or_inc,\r\n        }}>\r\n\r\n       \r\n        <Popover\r\n        content={area_message}\r\n        placement=\"top\"\r\n        >\r\n        <Form.Item\r\n        style={{ marginBottom: \"0px\" }}\r\n        label=\"Location\"\r\n        name=\"areas\"\r\n        rules={[\r\n          { required: true, message: \"Please select areas!\" },\r\n          ]}\r\n          >\r\n          <Select\r\n          showSearch\r\n          loading = {this.state.data_loading}\r\n          style={{ width: \"100%\" }}\r\n          placeholder=\"Select Areas\"\r\n          >\r\n          {optionlist}\r\n          </Select>\r\n          </Form.Item>\r\n          </Popover>\r\n          \r\n          \r\n            <Row>\r\n\r\n            <Col>\r\n            <Popover\r\n            content={\"Choose to plot cumulative or new weekly numbers\"}\r\n            placement=\"bottomLeft\">\r\n\r\n            <Form.Item label=\"Data Type\" style={{marginBottom: \"5px\"}} name=\"cum_or_inc\" value={cum_or_inc}>\r\n            <Radio.Group\r\n            initialValue = \"Cumulative\"\r\n            buttonStyle=\"solid\"\r\n            >\r\n            <Radio.Button value=\"Cumulative\">Cumulative</Radio.Button>\r\n            <Radio.Button value=\"New\">Weekly New</Radio.Button>\r\n            </Radio.Group>\r\n            </Form.Item>\r\n            </Popover>\r\n            </Col>\r\n\r\n            <Col>\r\n            <Popover\r\n            content={\"Choose cases or deaths to plot\"}\r\n            placement=\"bottomLeft\">\r\n\r\n            <Form.Item label=\"\" style={{marginBottom: \"5px\"}} name=\"CoD\" value={CoD}>\r\n            <Radio.Group\r\n            initialValue = \"case\"\r\n            buttonStyle=\"solid\"\r\n            >\r\n            <Radio.Button value=\"case\">Cases</Radio.Button>\r\n            <Radio.Button value=\"death\">Deaths</Radio.Button>\r\n            </Radio.Group>\r\n            </Form.Item>\r\n            </Popover>\r\n            </Col>\r\n\r\n            </Row>\r\n          </Form>\r\n          </div>\r\n          </Row>\r\n          <Row>\r\n          <div className=\"graph-row\">\r\n            <ResponsiveLine\r\n            data = {to_plot}\r\n            margin={{ top: 50, right: 10, bottom: 100, left: 60 }}\r\n            xScale={{\r\n              type: \"time\",\r\n              format: \"%Y-%m-%d\",\r\n            }}\r\n            xFormat=\"time:%Y-%m-%d\"\r\n            yScale={{\r\n              type: \"linear\",\r\n              min: \"auto\",\r\n              max: \"auto\",\r\n              stacked: false,\r\n              reverse: false\r\n            }}\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisLeft={{\r\n              format: y => numeral(y).format(\"0.[0]a\"),\r\n              orient: \"left\",\r\n              tickSize: 5,\r\n              tickPadding: 5,\r\n              tickRotation: 0,\r\n              legend: cum_or_inc.concat(' '.concat(CoD.concat('s'))),\r\n              legendOffset: -55,\r\n              legendPosition: \"middle\",\r\n            }}\r\n            axisBottom={{\r\n              format: \"%b %d\",\r\n              tickValues: num_ticks,\r\n              legend: \"date\",\r\n              legendOffset: 36,\r\n              legendPosition: \"middle\"\r\n            }}\r\n            colors={{ scheme: \"nivo\" }}\r\n            pointSize={10}\r\n            pointColor={{ theme: \"background\" }}\r\n            pointBorderWidth={2}\r\n            pointBorderColor={{ from: \"serieColor\" }}\r\n            pointLabel=\"y\"\r\n            pointLabelYOffset={-12}\r\n            useMesh={true}\r\n            legends={[\r\n              {\r\n                text: {fontSize: 14},\r\n                anchor: \"top-left\",\r\n                direction: \"column\",\r\n                justify: false,\r\n                translateX: 30,\r\n                translateY: 0,\r\n                itemsSpacing: 0,\r\n                itemDirection: \"left-to-right\",\r\n                itemWidth: 80,\r\n                itemHeight: 20,\r\n                itemOpacity: 0.75,\r\n                symbolSize: 12,\r\n                symbolShape: \"circle\",\r\n                symbolBorderColor: \"rgba(0, 0, 0, .5)\",\r\n                effects: [\r\n                {\r\n                  on: \"hover\",\r\n                  style: {\r\n                    itemBackground: \"rgba(0, 0, 0, .03)\",\r\n                    itemOpacity: 1\r\n                  }\r\n                }\r\n                ]\r\n              }\r\n              ]}\r\n              theme = {theme}\r\n              />\r\n            </div>\r\n          </Row>\r\n          <div className = \"introduction\">\r\n            <Row>\r\n            <div style ={{background: \"#fae3a2\"}}>\r\n            <p>\r\n            [<b>Note</b>: The data is noisy for some regions with decreasing cumulative values and missing values. \r\n             In some cases, the forecast for a region may be lower than one of its sub-region which could be a result of less availabiltiy and more noise at the sub-region level.\r\n             In that case, the sub-region data and forecast are less reliable, yet not impossible, and may point toward possible new outbreaks.\r\n             See below for our forecasts from alternative sources that are less noisy \r\n             and should be preferred for country-level and state-level for US, Germnany, and Poland.]\r\n            </p>\r\n            </div>\r\n            </Row>\r\n            <Row>\r\n            <p>Use the following links to download CSV files to analyze yourself (Right-click -> Save As): </p>\r\n            \r\n            <ul>\r\n            <li><a href =  \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/google_data.csv\" download target=\"_blank\">\r\n            All formatted case data from Google </a></li>\r\n            <li><a href =  \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/google_deaths.csv\" download target=\"_blank\">\r\n            All formatted death data from Google </a> </li>\r\n            <li><a href =  \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/google_forecasts_current_0.csv\" download target=\"_blank\">\r\n            Case forecasts on Google data </a> </li>\r\n            <li><a href =  \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/google_deaths_current_0.csv\" download target=\"_blank\">\r\n            Death forecasts on Google data </a> </li>\r\n            </ul>\r\n\r\n            </Row>\r\n            \r\n            <Row>\r\n            <h3>Forecasts from Alternative Sources</h3>\r\n            <p>The following are the latest forecasts for Countries and the US states used on the main forecast page. These files are based on \r\n            the <a href = \"https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data\"> JHU data </a>\r\n            </p>\r\n            \r\n            <ul>\r\n            <li><a href =  \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/us_data.csv\" download target=\"_blank\">\r\n            All formatted case data for US states </a></li>\r\n            <li><a href =  \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/us_deaths.csv\" download target=\"_blank\">\r\n            All formatted death data for US states </a></li>\r\n            <li><a href =  \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/global_forecasts_current_0.csv\" download target=\"_blank\">\r\n            Case forecasts for all countries </a></li>\r\n            <li><a href =  \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/global_deaths_current_0.csv\" download target=\"_blank\">\r\n            Death forecasts for all countries </a></li>\r\n            </ul>\r\n            </Row>\r\n          \r\n            <Row>\r\n            <p>Follow  this <a href = \"https://github.com/scc-usc/ReCOVER-COVID-19/tree/master/results/historical_forecasts\"> link </a> for\r\n            dated forecasts for German states and Polish Voivodeships. These files are based on the data compiled by \r\n            <a href = \"https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data\" target=\"_blank\"> Germany and Poland Forecast Hub</a>\r\n            </p>\r\n            </Row>\r\n\r\n            <Row>\r\n            &nbsp;\r\n            </Row>\r\n          </div>\r\n\r\n          </div>\r\n          </div>\r\n          );\r\n        }\r\n      }\r\n\r\n      export default RoW;"],"sourceRoot":""}