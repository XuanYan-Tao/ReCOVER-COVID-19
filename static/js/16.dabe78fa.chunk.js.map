{"version":3,"sources":["RoW/RoW.js"],"names":["globallist","Option","RoW","state","area_message","cum_or_inc","data_loading","areas","width","height","arealist","case_data","death_data","death_list","case_preds","case_pred_list","death_preds","death_pred_list","CoD","case_data_plot","death_data_plot","case_preds_plot","death_preds_plot","data_date","pred_date","to_plot","updateWindowDimensions","bind","plotData","onValuesChange","doneLoading","this","window","addEventListener","ReactGA","initialize","pageview","setState","Papa","parse","download","worker","complete","results","i","data","length","slice","thislist","removeEventListener","innerWidth","innerHeight","thisdata","preds","dd","push","x","y","dd_p","base_dat","diff_dat","full_dd","id","changedValues","allValues","idx","indexOf","case_d","death_d","optionlist","map","s","key","value","num_ticks","style","color","className","href","target","ref","formRef","initialValues","content","placement","Item","marginBottom","label","name","rules","required","message","showSearch","loading","placeholder","Group","initialValue","buttonStyle","Button","margin","top","right","bottom","left","xScale","type","format","xFormat","yScale","min","max","stacked","reverse","axisTop","axisRight","axisLeft","numeral","orient","tickSize","tickPadding","tickRotation","legend","concat","legendOffset","legendPosition","axisBottom","tickValues","colors","scheme","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","from","pointLabel","pointLabelYOffset","useMesh","legends","text","fontSize","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","itemBackground","axis","ticks","background","Component"],"mappings":"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","file":"static/js/16.dabe78fa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Papa from \"papaparse\";\nimport 'antd/dist/antd.css';\nimport \"./RoW.css\";\nimport { ResponsiveLine } from \"@nivo/line\";\n//import moment from \"moment\";\nimport numeral from \"numeral\";\nimport ReactGA from \"react-ga\";\n\nimport {\n  List,\n  Form,\n  Select,\n  InputNumber,\n  Button,\n  Radio,\n  Checkbox,\n  Slider,\n  Tooltip,\n  Switch,\n  Popover,\n  Alert,\n  Row,\n  Col,\n  Input\n} from \"antd\";\n\nvar g_cases = \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/google_data.csv\";\nvar g_deaths = \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/google_deaths.csv\";\nvar g_case_preds = \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/google_forecasts_current_0.csv\";\nvar g_death_preds = \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/google_deaths_current_0.csv\";\nvar globallist = [];\n\nconst { Option } = Select;\n\nclass RoW extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n      area_message: \"Please wait for data to load\",\n      cum_or_inc: \"Cumulative\",\n      data_loading: true,\n      areas: [],\n      width: 0, \n      height: 0,\n      arealist: [],\n      case_data: [],\n      death_data: [],\n      death_list:[],\n      case_preds: [],\n      case_pred_list: [],\n      death_preds: [],\n      death_pred_list: [],\n      CoD: \"case\",\n      case_data_plot: [],\n      death_data_plot: [],\n      case_preds_plot: [],\n      death_preds_plot: [],\n      data_date:[],\n      pred_date: [],\n      to_plot: []\n    };\n\n\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.plotData = this.plotData.bind(this);\n    this.onValuesChange = this.onValuesChange.bind(this);\n    this.doneLoading = this.doneLoading.bind(this);\n    \n\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n    ReactGA.initialize('UA-186385643-1');\n    ReactGA.pageview('/ReCOVER/RoW');\n    this.setState({arealist: globallist});\n  }\n\n  componentWillMount() {\n\n    Papa.parse(g_cases, {\n      download: true, worker: true,\n      complete: function(results) {\n        var i;\n          //var globallist = [];\n          for(i=1; i<results.data.length; i++)\n          {\n            if(results.data[i].length > 2){\n              globallist[i-1] = results.data[i][1];\n            }\n          }\n          this.setState({data_date: results.data[0].slice(2)});\n          this.setState({arealist: globallist});\n          this.setState({case_data: results.data});\n          //console.log(this.state.data_date);\n        }.bind(this)\n      });\n\n    Papa.parse(g_deaths, {\n      download: true, worker: true,\n      complete: function(results) {\n        var i;\n        var thislist = [];\n        for(i=1; i<results.data.length; i++)\n        {\n          if(results.data[i].length > 2){\n            thislist[i-1] = results.data[i][1];\n          }\n        }\n        this.setState({death_list: thislist});\n        this.setState({death_data: results.data});\n      }.bind(this)\n    });\n\n    Papa.parse(g_case_preds, {\n      download: true, worker: true,\n      complete: function(results) {\n        var i;\n        var thislist = [];\n        for(i=1; i<results.data.length; i++)\n        {\n          if(results.data[i].length > 2){\n            thislist[i-1] = results.data[i][1];\n          }\n        }\n        this.setState({pred_date: results.data[0].slice(2)});\n        this.setState({case_pred_list: thislist});\n        this.setState({case_preds: results.data});\n        //console.log(this.state.pred_date);\n      }.bind(this)\n    });\n\n    Papa.parse(g_death_preds, {\n      download: true, worker: true,\n      complete: function(results) {\n        var i;\n        var thislist = [];\n        for(i=1; i<results.data.length; i++)\n        {\n          if(results.data[i].length > 2){\n            thislist[i-1] = results.data[i][1];\n          }\n        }\n        this.setState({death_pred_list: thislist});\n        this.setState({death_preds: results.data});\n        //console.log(this.state.death_preds.length);\n      }.bind(this)\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  }\n\n  plotData()\n  {\n    var dd=[];\n    var thisdata, preds;\n    var i;\n\n    if(this.state.CoD === \"case\")\n    {\n      thisdata = this.state.case_data_plot;\n      preds = this.state.case_preds_plot;\n    }\n    else\n    {\n      thisdata = this.state.death_data_plot;\n      preds = this.state.death_preds_plot; \n    }\n\n    if(this.state.cum_or_inc === \"Cumulative\")\n    {  \n      for(i=0; i<thisdata.length; i++)\n      {\n        if(thisdata[i] > 0 && this.state.data_date[i]){\n          dd.push({\n            x: this.state.data_date[i],\n            y: thisdata[i]\n          });\n        }\n      }\n      var dd_p = [];\n      for(i=0; i<preds.length; i++)\n      {\n        if (this.state.pred_date[i])\n        {\n        dd_p.push({\n          x: this.state.pred_date[i],\n          y: preds[i]\n        });\n      }\n      }\n    }\n    else\n    {\n      var base_dat = thisdata[0];\n      var diff_dat = 0;\n      for(i=1; i<thisdata.length; i++)\n      {\n        diff_dat = thisdata[i] -base_dat;\n        if(diff_dat >= 0 && base_dat> 0 && this.state.data_date[i])\n        {\n          dd.push({\n            x: this.state.data_date[i],\n            y: diff_dat\n          });\n        }\n        base_dat = thisdata[i];\n      }\n      var dd_p = [];\n      base_dat = thisdata[thisdata.length-1];\n      //base_dat = base_dat>0?base_dat:-1;\n      for(i=0; i<preds.length; i++)\n      {\n        diff_dat = preds[i] -base_dat;\n        if(diff_dat >= 0 && base_dat> 0 && this.state.pred_date[i])\n        {\n          dd_p.push({\n            x: this.state.pred_date[i],\n            y: diff_dat\n          });\n        }\n        base_dat = preds[i];\n      }\n    }\n    var full_dd = [{id: \"Data\", data:dd}, {id: \"Forecasts\", data:dd_p},];\n    this.setState({to_plot: full_dd});\n    //console.log(full_dd);\n  }\n\n  onValuesChange(changedValues, allValues){\n\n    if (\"areas\" in changedValues)\n    {\n      var idx = this.state.arealist.indexOf(allValues.areas);\n      var case_d = [];\n      //console.log(idx);\n      if (idx>-1){\n        case_d = this.state.case_data[idx+1].slice(2);\n      }\n      this.setState({case_data_plot : case_d});\n\n      case_d = [];\n      idx = this.state.case_pred_list.indexOf(allValues.areas);\n      if (idx>-1){\n        case_d = this.state.case_preds[idx+1].slice(2);\n      }\n      this.setState({case_preds_plot : case_d});\n      \n      var death_d = [];\n      idx = this.state.death_list.indexOf(allValues.areas);\n      if (idx>-1){\n        death_d = this.state.death_data[idx+1].slice(2);\n      }\n      this.setState({death_data_plot : death_d});\n      \n      death_d =[];\n      idx = this.state.death_pred_list.indexOf(allValues.areas);\n      if (idx>-1){\n        death_d = this.state.death_preds[idx+1].slice(2);\n      }\n      this.setState({death_preds_plot: death_d});\n    }\n    if(\"cum_or_inc\" in changedValues)\n    {\n      this.setState({cum_or_inc: allValues.cum_or_inc}, ()=>this.plotData());  \n    }\n    this.setState({CoD: allValues.CoD}, ()=>this.plotData());\n  }\n\n  doneLoading()\n  {\n    this.setState({data_loading: false});\n    this.setState({area_message: \"Start typing a location name to see its data and forecasts\"})\n\n  }\n\n  render() {\n    const {areas,arealist,CoD, to_plot, data_loading, cum_or_inc, area_message} = this.state;\n    //console.log(to_plot);\n    const theme = {\n      axis: {\n        ticks: {\n          text: {\n            fontSize: 16\n          }\n        },\n        legend: {\n          text: {\n            fontSize: 16\n          }\n        }\n      },\n      legends: {\n        text: {\n          fontSize: 16\n        }\n      }\n    };\n    let optionlist = arealist.length > 0\n    && arealist.map ((s) => {\n      return (\n        <Option key={s} value={s}>{s}</Option>\n        )\n      }, this);\n      const num_ticks = 1 + this.state.width/280;\n\n      \n      if(this.state.data_loading & this.state.case_preds.length>0 && this.state.death_preds.length>0 && this.state.death_data.length > 0 && this.state.case_data.length > 0)\n      {\n        this.doneLoading();\n      }\n      \n      return (\n       <div style={{color: \"#1f1c1c\"}}>\n       <div className=\"grid\">\n         <div className = \"introduction\">\n         <Row>\n         <h1>Forecasts for \"Almost\" Everywhere</h1>\n         </Row>\n\n         <Row>\n         <p>\n         Use this page to see forecasts not addressed on the <a href=\"#/\"> main page</a>. Forecasts are available for all locations (around 20,000) for which Google makes its data \n         <a href=\"https://github.com/GoogleCloudPlatform/covid-19-open-data\" target=\"_blank\"> public</a>. \n         </p>\n         \n         </Row> \n         </div>\n\n         <Row>\n         <div className=\"form-column-row\">\n         \n         <Form \n         ref={this.formRef}\n         onValuesChange={this.onValuesChange}\n         initialValues={{\n          areas: areas,\n          CoD: CoD,\n          cum_or_inc: cum_or_inc,\n        }}>\n\n       \n        <Popover\n        content={area_message}\n        placement=\"top\"\n        >\n        <Form.Item\n        style={{ marginBottom: \"0px\" }}\n        label=\"Location\"\n        name=\"areas\"\n        rules={[\n          { required: true, message: \"Please select areas!\" },\n          ]}\n          >\n          <Select\n          showSearch\n          loading = {this.state.data_loading}\n          style={{ width: \"100%\" }}\n          placeholder=\"Select Areas\"\n          >\n          {optionlist}\n          </Select>\n          </Form.Item>\n          </Popover>\n          \n          \n            <Row>\n\n            <Col>\n            <Popover\n            content={\"Choose to plot cumulative or new weekly numbers\"}\n            placement=\"bottomLeft\">\n\n            <Form.Item label=\"Data Type\" style={{marginBottom: \"5px\"}} name=\"cum_or_inc\" value={cum_or_inc}>\n            <Radio.Group\n            initialValue = \"Cumulative\"\n            buttonStyle=\"solid\"\n            >\n            <Radio.Button value=\"Cumulative\">Cumulative</Radio.Button>\n            <Radio.Button value=\"New\">Weekly New</Radio.Button>\n            </Radio.Group>\n            </Form.Item>\n            </Popover>\n            </Col>\n\n            <Col>\n            <Popover\n            content={\"Choose cases or deaths to plot\"}\n            placement=\"bottomLeft\">\n\n            <Form.Item label=\"\" style={{marginBottom: \"5px\"}} name=\"CoD\" value={CoD}>\n            <Radio.Group\n            initialValue = \"case\"\n            buttonStyle=\"solid\"\n            >\n            <Radio.Button value=\"case\">Cases</Radio.Button>\n            <Radio.Button value=\"death\">Deaths</Radio.Button>\n            </Radio.Group>\n            </Form.Item>\n            </Popover>\n            </Col>\n\n            </Row>\n          </Form>\n          </div>\n          </Row>\n          <Row>\n          <div className=\"graph-row\">\n            <ResponsiveLine\n            data = {to_plot}\n            margin={{ top: 50, right: 10, bottom: 100, left: 60 }}\n            xScale={{\n              type: \"time\",\n              format: \"%Y-%m-%d\",\n            }}\n            xFormat=\"time:%Y-%m-%d\"\n            yScale={{\n              type: \"linear\",\n              min: \"auto\",\n              max: \"auto\",\n              stacked: false,\n              reverse: false\n            }}\n            axisTop={null}\n            axisRight={null}\n            axisLeft={{\n              format: y => numeral(y).format(\"0.[0]a\"),\n              orient: \"left\",\n              tickSize: 5,\n              tickPadding: 5,\n              tickRotation: 0,\n              legend: cum_or_inc.concat(' '.concat(CoD.concat('s'))),\n              legendOffset: -55,\n              legendPosition: \"middle\",\n            }}\n            axisBottom={{\n              format: \"%b %d\",\n              tickValues: num_ticks,\n              legend: \"date\",\n              legendOffset: 36,\n              legendPosition: \"middle\"\n            }}\n            colors={{ scheme: \"nivo\" }}\n            pointSize={10}\n            pointColor={{ theme: \"background\" }}\n            pointBorderWidth={2}\n            pointBorderColor={{ from: \"serieColor\" }}\n            pointLabel=\"y\"\n            pointLabelYOffset={-12}\n            useMesh={true}\n            legends={[\n              {\n                text: {fontSize: 14},\n                anchor: \"top-left\",\n                direction: \"column\",\n                justify: false,\n                translateX: 30,\n                translateY: 0,\n                itemsSpacing: 0,\n                itemDirection: \"left-to-right\",\n                itemWidth: 80,\n                itemHeight: 20,\n                itemOpacity: 0.75,\n                symbolSize: 12,\n                symbolShape: \"circle\",\n                symbolBorderColor: \"rgba(0, 0, 0, .5)\",\n                effects: [\n                {\n                  on: \"hover\",\n                  style: {\n                    itemBackground: \"rgba(0, 0, 0, .03)\",\n                    itemOpacity: 1\n                  }\n                }\n                ]\n              }\n              ]}\n              theme = {theme}\n              />\n            </div>\n          </Row>\n          <div className = \"introduction\">\n            <Row>\n            <div style ={{background: \"#fae3a2\"}}>\n            <p>\n            [<b>Note</b>: The data is noisy for some regions with decreasing cumulative values and missing values. \n             In some cases, the forecast for a region may be lower than one of its sub-region which could be a result of less availabiltiy and more noise at the sub-region level.\n             In that case, the sub-region data and forecast are less reliable, yet not impossible, and may point toward possible new outbreaks.\n             See below for our forecasts from alternative sources that are less noisy \n             and should be preferred for country-level and state-level for US, Germnany, and Poland.]\n            </p>\n            </div>\n            </Row>\n            <Row>\n            <p>Use the following links to download CSV files to analyze yourself (Right-click -> Save As): </p>\n            \n            <ul>\n            <li><a href =  \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/google_data.csv\" download target=\"_blank\">\n            All formatted case data from Google </a></li>\n            <li><a href =  \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/google_deaths.csv\" download target=\"_blank\">\n            All formatted death data from Google </a> </li>\n            <li><a href =  \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/google_forecasts_current_0.csv\" download target=\"_blank\">\n            Case forecasts on Google data </a> </li>\n            <li><a href =  \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/google_deaths_current_0.csv\" download target=\"_blank\">\n            Death forecasts on Google data </a> </li>\n            </ul>\n\n            </Row>\n            \n            <Row>\n            <h3>Forecasts from Alternative Sources</h3>\n            <p>The following are the latest forecasts for Countries and the US states used on the main forecast page. These files are based on \n            the <a href = \"https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data\"> JHU data </a>\n            </p>\n            \n            <ul>\n            <li><a href =  \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/us_data.csv\" download target=\"_blank\">\n            All formatted case data for US states </a></li>\n            <li><a href =  \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/us_deaths.csv\" download target=\"_blank\">\n            All formatted death data for US states </a></li>\n            <li><a href =  \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/global_forecasts_current_0.csv\" download target=\"_blank\">\n            Case forecasts for all countries </a></li>\n            <li><a href =  \"https://raw.githubusercontent.com/scc-usc/ReCOVER-COVID-19/master/results/forecasts/global_deaths_current_0.csv\" download target=\"_blank\">\n            Death forecasts for all countries </a></li>\n            </ul>\n            </Row>\n          \n            <Row>\n            <p>Follow  this <a href = \"https://github.com/scc-usc/ReCOVER-COVID-19/tree/master/results/historical_forecasts\"> link </a> for\n            dated forecasts for German states and Polish Voivodeships. These files are based on the data compiled by \n            <a href = \"https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data\" target=\"_blank\"> Germany and Poland Forecast Hub</a>\n            </p>\n            </Row>\n\n            <Row>\n            &nbsp;\n            </Row>\n          </div>\n\n          </div>\n          </div>\n          );\n        }\n      }\n\n      export default RoW;"],"sourceRoot":""}